== New Tests
* reuse parser object multiple times
* ->parse($input, $start_rule, {options})
* ->parse($input, {options})
* ->parse({options})
* partial + continue
* return on error
* parse to length
* parse at position


== API
* $parser->parse($input);                       # legacy
* $parser->parse($input, $start_rule);          # legacy
* $parser->parse($input, $options_hash_ref);    # new (start rule is an option)
* $parser->parse($options_hash_ref);            # new ($input not needed on continue)


== New parser options
* start     - Str  - start rule name            (first || TOP)
* position  - Int  - input position to start    (0)
* length    - Int  - length of input to parse   (length(input))
* return    - Bool - return false on error      (false; ie throw on error)
* partial   - Bool - allow partial parse        (false)
* continue  - Bool - continue parsing           (false)


==New Methods
- error     - Return object if exists. FOr use with 'return' option.


== ToDo Notes
- set farthest to position
